(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{364:function(a,v,t){"use strict";t.r(v);var s=t(25),e=Object(s.a)({},(function(){var a=this,v=a.$createElement,t=a._self._c||v;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"java特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java特性"}},[a._v("#")]),a._v(" Java特性")]),a._v(" "),t("ol",[t("li",[a._v("面向对象: 封装，继承，多态")]),a._v(" "),t("li",[a._v("可移植性: JVM -> 书写一次到处运行（Write Once, Run Anywhere）")]),a._v(" "),t("li",[a._v("垃圾回收（Garbage Collection）: 自动实现垃圾的释放，以及内存空间的回收")]),a._v(" "),t("li",[a._v("引用传递: 避免了指针操作，使用了更为简单的引用传递就行处理")]),a._v(" "),t("li",[a._v("多线程编程支持")]),a._v(" "),t("li",[a._v("适合分布式计算: 本质是为网络开发而准备的")])]),a._v(" "),t("h2",{attrs:{id:"java运行"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java运行"}},[a._v("#")]),a._v(" Java运行")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[a._v("源代码(.java) -> Javac 编译(.class) -> JVM 解释或编译执行字节码\n")])])]),t("p",[t("strong",[a._v("跨平台的特性")]),a._v("：通过字节码和 JVM 实现，Java 的编译不同于"),t("code",[a._v("C")]),a._v(","),t("code",[a._v("C++")]),a._v("，由编译器"),t("code",[a._v("Javac")]),a._v("编译源码生成的"),t("code",[a._v(".class")]),a._v("文件中实际上是字节码("),t("code",[a._v("bytecode")]),a._v(")，而非可以直接运行的机器码，JVM 通过类加载器("),t("code",[a._v("Class-Loader")]),a._v(")加载字节码，解释或者编译执行")]),a._v(" "),t("p",[t("a",{attrs:{href:"https://blog.csdn.net/qq_36042506/article/details/82976586",target:"_blank",rel:"noopener noreferrer"}},[t("strong",[a._v("即时编译")]),t("OutboundLink")],1),a._v("（Just In Time）：早期 Java 还算是解释型语言，但是在拥有 JIT 的 JVM 环境下，Java 已经不再严格是解释型了。JVM 会将执行频率高的方法或语句块通过 JIT 编译成本地机器码，提高代码执行效率")]),a._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[a._v("提示")]),a._v(" "),t("p",[a._v("编译型：源代码直接编译生成可执行的机器码；运行速度快，跨平台性差"),t("br"),a._v("\n解释型：由解释器对源代码进行逐行翻译运行；运行速度慢，跨平台性好")]),a._v(" "),t("p",[a._v("静态类型：编译时变量的数据类型即确定，多数要求在使用变量前必须声明数据类型(Java,C,C++)"),t("br"),a._v("\n动态类型：运行时确定数据类型的语言，变量使用之前不需要类型声明(Python, JS, Ruby)")]),a._v(" "),t("p",[a._v("强类型: 一旦变量的类型被确定，就不能转化的语言(Java, Python)"),t("br"),a._v("\n弱类型: 偏向于容忍隐式类型转换(C, C++, JS)")])]),a._v(" "),t("div",{attrs:{align:"center"}},[t("p",[t("img",{attrs:{src:"/img/Java/language.jpg",alt:"不同类型语言"}})])]),a._v(" "),t("h2",{attrs:{id:"java规范"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java规范"}},[a._v("#")]),a._v(" Java规范")]),a._v(" "),t("ol",[t("li",[a._v("一个源文件（"),t("code",[a._v(".java")]),a._v("）只能有一个 public 类，且类名与源文件名保持一致")]),a._v(" "),t("li",[a._v("一个源文件（"),t("code",[a._v(".java")]),a._v("）可以有多个非 public 类（实际上就是"),t("code",[a._v("default")]),a._v("权限，只允许同一个包下的类访问），编译时会每个类会生成自己的"),t("code",[a._v(".class")]),a._v("文件")]),a._v(" "),t("li",[a._v("主方法：程序的入口 "),t("code",[a._v("public static void main(String[] args)")])]),a._v(" "),t("li",[a._v("三种注释方法")])]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 单行注释")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* \n 多行注释\n (不常用)\n*/")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/**\n * 文档注释\n */")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br")])]),t("h2",{attrs:{id:"java基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java基本概念"}},[a._v("#")]),a._v(" Java基本概念")]),a._v(" "),t("ol",[t("li",[a._v("JRE（Java Runtime Environment）：Java 运行环境，与开发无关，包含 JVM 和 Java 类库")]),a._v(" "),t("li",[a._v("JDK（Java Development Kit）：Java 开发工具，包含另一个 JRE，提供更多工具如编译器 Javac")]),a._v(" "),t("li",[a._v("JVM（Java Virtual Machine）： Java 虚拟机，是程序与操作系统之间的过渡，针对虚拟机开发，无需关注操作系统细节")])]),a._v(" "),t("h2",{attrs:{id:"java开发方向"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java开发方向"}},[a._v("#")]),a._v(" Java开发方向")]),a._v(" "),t("ol",[t("li",[a._v("Java 标准开发（SE）：JDK 提供的就是单机程序开发支持")]),a._v(" "),t("li",[a._v("Java 企业级开发（EE）：构建分布式的企业系统平台")]),a._v(" "),t("li",[a._v("Java 嵌入式开发（ME）：微型 Java 程序开发，在移动设备上植入 JVM，后被 Android 替代")])]),a._v(" "),t("h2",{attrs:{id:"其他"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[a._v("#")]),a._v(" 其他")]),a._v(" "),t("ol",[t("li",[t("code",[a._v("CLASSPATH")]),a._v("：JVM 执行时所需要的环境属性，用于定义类的加载路径")]),a._v(" "),t("li",[t("code",[a._v("PATH")]),a._v("：操作系统定义的环境属性，用于指定所有可执行程序的目录")])]),a._v(" "),t("h2",{attrs:{id:"参考"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[a._v("#")]),a._v(" 参考")]),a._v(" "),t("p",[a._v("[1] "),t("a",{attrs:{href:"https://edu.aliyun.com/roadmap/java?spm=5176.13345299.1392477.3.63ddf153q7QkVf",target:"_blank",rel:"noopener noreferrer"}},[a._v("阿里云大学 | 李兴华 - Java语言基础"),t("OutboundLink")],1)])])}),[],!1,null,null,null);v.default=e.exports}}]);