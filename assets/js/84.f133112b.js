(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{375:function(e,t,a){"use strict";a.r(t);var r=a(25),n=Object(r.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("ul",[a("li",[e._v("HashSet：基于 "),a("strong",[e._v("HashMap")]),e._v("，元素无序唯一，线程不安全")]),e._v(" "),a("li",[e._v("LinkedHashSet：基于 "),a("strong",[e._v("LinkedHashMap")]),e._v("，按元素插入顺序，线程不安全")]),e._v(" "),a("li",[e._v("TreeSet：基于 "),a("strong",[e._v("TreeMap")]),e._v("，元素按照指定顺序排序，线程不安全")])]),e._v(" "),a("h2",{attrs:{id:"hashset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hashset"}},[e._v("#")]),e._v(" HashSet")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("基于 HashMap 实现"),a("br"),e._v("\n(1) 创建一个虚拟对象 Object PRESENT = new Object() 作为 value"),a("br"),e._v("\n(2) 构造方法基本都是调用 HashMap 的构造方法"),a("br"),e._v("\n(3) 含有一个特殊的 private 构造方法，创建一个 LinkedHashMap，主要给 LinkedHashSet 使用")])]),e._v(" "),a("li",[a("p",[e._v("允许 "),a("code",[e._v("null")]),e._v(" 元素存在，因为作为 key 存储，也需要实现 hashCode() 和 equals() 方法")])]),e._v(" "),a("li",[a("p",[e._v("初始容量同 HashMap，也可提前设置容量，容量计算方法： (n/0.75f) + 1")])]),e._v(" "),a("li",[a("p",[e._v("HashMap 是 transient 的，自己实现了 writeObject 和 readObject，避免空间浪费（25% 是空的）")])])]),e._v(" "),a("h2",{attrs:{id:"linkedhashset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashset"}},[e._v("#")]),e._v(" LinkedHashSet")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("继承自 HashSet，基于 LinkedHashMap 实现"),a("br"),e._v("\n(1) 结构简单源码只包含 4 个构造方法和一个迭代器方法\n(2) 基本调用父类 HashSet 的 private 构造方法 super(initialCapacity, loadFactor, true);")])]),e._v(" "),a("li",[a("p",[e._v("不同于 LinkedHashMap，不支持按照访问顺序排序，只能按照插入顺序排序")])]),e._v(" "),a("li",[a("p",[e._v("添加，删除等方法都是使用 HashSet的，唯一不同将内部 map 使用 LinkedHashSet 实现")])])]),e._v(" "),a("h2",{attrs:{id:"treeset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#treeset"}},[e._v("#")]),e._v(" TreeSet")]),e._v(" "),a("ol",[a("li",[a("p",[e._v("底层存储类型为 NavigableMap\n(1) public 构造方法都是使用 TreeMap 实现，不代表只能 TreeMap 实现"),a("br"),e._v("\n(2) 但是存在一个 default TreeSet(NavigableMap<E,Object> m)，用于同 package 使用")])]),e._v(" "),a("li",[a("p",[e._v("元素排序规则有两种方法指定"),a("br"),e._v("\n(1) 元素自身实现了 Comparable 接口，重写 int compareTo() 方法"),a("br"),e._v("\n(2) 创建时，指定一个比较器 Comparator")])])]),e._v(" "),a("hr"),e._v(" "),a("p",[a("strong",[e._v("参考链接")])]),e._v(" "),a("p",[e._v("[1] "),a("a",{attrs:{href:"https://www.cnblogs.com/tong-yuan/p/HashSet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("彤哥读源码 | HashSet"),a("OutboundLink")],1),a("br"),e._v("\n[2] "),a("a",{attrs:{href:"https://www.cnblogs.com/tong-yuan/p/LinkedHashSet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("彤哥读源码 | LinkedHashSet"),a("OutboundLink")],1),a("br"),e._v("\n[3] "),a("a",{attrs:{href:"https://www.cnblogs.com/tong-yuan/p/TreeSet.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("彤哥读源码 | TreeSet"),a("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);