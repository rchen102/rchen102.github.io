(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{458:function(v,_,t){"use strict";t.r(_);var l=t(25),s=Object(l.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h2",{attrs:{id:"介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[v._v("#")]),v._v(" 介绍")]),v._v(" "),t("p",[v._v("栈和队列都属于操作受限的线性表，仅支持有限的操作。特定的数据结构主要是对特定使用场景的抽象，所以从功能上讲，数组和队列可以替代栈和队列（本质上栈和队列都有数组或队列的实现方式），但是相比之下，数组和链表暴露了更多的操作接口，操作更灵活的同时，也更容易出错")]),v._v(" "),t("h2",{attrs:{id:"栈的介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#栈的介绍"}},[v._v("#")]),v._v(" 栈的介绍")]),v._v(" "),t("p",[t("strong",[v._v("特点")]),v._v("：先进后出（First in, last out）")]),v._v(" "),t("p",[t("strong",[v._v("两个基本操作")]),v._v("：通过均摊时间分析，操作复杂度都为 "),t("code",[v._v("O(1)")])]),v._v(" "),t("ul",[t("li",[v._v("入栈（push）")]),v._v(" "),t("li",[v._v("出栈（pop）")])]),v._v(" "),t("blockquote",[t("p",[v._v("入栈时，如果栈已满，将进行栈的扩容和数据的复制，因此最坏复杂度是 "),t("code",[v._v("O(n)")]),v._v("，但是通过均摊时间分析，可知平均复杂度还是"),t("code",[v._v("O(1)")])])]),v._v(" "),t("p",[t("strong",[v._v("栈的实现")])]),v._v(" "),t("ul",[t("li",[v._v("顺序栈（数组实现）：支持动态扩容的顺序栈: 与数组动态扩容类似")]),v._v(" "),t("li",[v._v("链式栈（链表实现）：天然支持动态扩容，但是需要消耗额外的内存空间储存 "),t("code",[v._v("next")]),v._v(" 指针")])]),v._v(" "),t("p",[t("strong",[v._v("常见应用")])]),v._v(" "),t("ul",[t("li",[v._v("函数调用，栈帧")]),v._v(" "),t("li",[v._v("表达式求值（使用两个栈，分别存储运算数和运算符）")]),v._v(" "),t("li",[v._v("括号匹配")]),v._v(" "),t("li",[v._v("浏览器前进后退（使用两个栈）")])]),v._v(" "),t("h2",{attrs:{id:"队列介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#队列介绍"}},[v._v("#")]),v._v(" 队列介绍")]),v._v(" "),t("p",[t("strong",[v._v("特点")]),v._v("：先进先出（First in, first out）")]),v._v(" "),t("p",[t("strong",[v._v("两个基本操作")]),v._v("：通过均摊时间分析，操作复杂度都为 "),t("code",[v._v("O(1)")])]),v._v(" "),t("ul",[t("li",[v._v("入队（enqueue）")]),v._v(" "),t("li",[v._v("出队（dequeue）")])]),v._v(" "),t("p",[t("strong",[v._v("队列的实现")]),v._v("：栈只需要一个栈顶指针，而队列需要两个，分别指向队首（head）和队尾（tail）")]),v._v(" "),t("ul",[t("li",[v._v("顺序队列（数组实现）：在不断的入队出队操作中，头尾指针都将持续向后移动\n"),t("ul",[t("li",[v._v("解决方案1: 数据搬迁，在进行入队操作时，如果没有空闲空间，则触发数据搬迁")]),v._v(" "),t("li",[v._v("解决方案2: 循环队列，避免了数据搬迁，更加高效，关键是要区分队空和队满的条件")])])]),v._v(" "),t("li",[v._v("链式队列（链表实现）：无限制的队列，但是同样需要额外的内存空间")])]),v._v(" "),t("p",[t("strong",[v._v("常见应用")])]),v._v(" "),t("ul",[t("li",[v._v("CPU 调度")]),v._v(" "),t("li",[v._v("线程池处理请求")])]),v._v(" "),t("p",[t("strong",[v._v("队列变种")])]),v._v(" "),t("ul",[t("li",[v._v("阻塞队列\n"),t("ul",[t("li",[v._v("队列为空时，出队操作会被阻塞，直到队列中有了数据再返回数据")]),v._v(" "),t("li",[v._v("队列已满时，入队操作会被阻塞，直到队列中有了空闲位置再插入数据")])])]),v._v(" "),t("li",[v._v("并发队列：线程安全的队列")])])])}),[],!1,null,null,null);_.default=s.exports}}]);