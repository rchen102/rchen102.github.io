(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{411:function(t,a,s){"use strict";s.r(a);var n=s(25),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"final-可见性"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#final-可见性"}},[t._v("#")]),t._v(" final 可见性")]),t._v(" "),s("p",[t._v("被 final 修饰的字段在声明时或者构造器中，一旦初始化完成（且无 this 引用逃逸），final 变量的值立刻回写到主内存，其他线程无须同步就能正确看见 final 字段的值")]),t._v(" "),s("blockquote",[s("p",[t._v("this 引用逃逸：指对象还没有构造完成，它的 this 引用就被发布出去了，其他线程有可能通过这个逸出的引用访问到“初始化了一半”的对象")])]),t._v(" "),s("h2",{attrs:{id:"volatile-两种语义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile-两种语义"}},[t._v("#")]),t._v(" volatile 两种语义")]),t._v(" "),s("p",[t._v("Java 语言中，volatile 关键字主要具备 2 种语义，可见性和有序性")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("语义一：可见性")])]),t._v(" "),s("p",[t._v("CPU 缓存会造成可见性问题，而 volatile 在 C 语言中，最原始的意义就是"),s("strong",[t._v("禁用 CPU 缓存")])]),t._v(" "),s("p",[t._v("JMM 规定，volatile 变量每次修改都必须立刻回写主存，每次使用都需要从主存中刷新最新的值：")]),t._v(" "),s("ul",[s("li",[t._v("每次对变量的修改，都会引起 CPU 缓存（工作内存）写回到主存")]),t._v(" "),s("li",[t._v("一个工作内存回写到主存会导致其他线程的 CPU 缓存（工作内存）无效")])])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("语义二：有序性")]),s("br"),t._v("\nJava 中，如果两个语句之间没有依赖关系，就可能被重排序优化，具体表现为：如果在本线程中观察，所有的操作都是有序的；如果在另一个线程中观察，所有的操作都是无序的")]),t._v(" "),s("p",[t._v("volatile 关键字主要是通过"),s("strong",[t._v("禁止重排序")]),t._v("来解决多线程程序的有序性问题，具体表现为：当程序执行到 volatile 变量的读或写时，在其前面的操作肯定全部已经执行完毕，且结果已经对后面的操作可见；在其后面的操作肯定还没有执行")])])]),t._v(" "),s("h2",{attrs:{id:"volatile-实现原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile-实现原理"}},[t._v("#")]),t._v(" volatile 实现原理")]),t._v(" "),s("h3",{attrs:{id:"内存屏障"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存屏障"}},[t._v("#")]),t._v(" 内存屏障")]),t._v(" "),s("p",[t._v("内存屏障是插入两个 CPU 指令之间的一种"),s("strong",[t._v("指令")]),t._v("，用来禁止 CPU 发生重排序保证"),s("strong",[t._v("有序性")]),t._v("；且为了达到屏障效果，部分内存屏障会使得 CPU 写入/读取值之前，将缓冲区/缓存的数据刷新写回主内存，因此附带保证了"),s("strong",[t._v("可见性")]),t._v("，因此可以总结，内存屏障有 2 个作用 ：")]),t._v(" "),s("ol",[s("li",[t._v("阻止屏障两边的指令重排序")]),t._v(" "),s("li",[t._v("强制把写缓冲区/高速缓存中的脏数据等写回主内存，让其他 CPU 缓存中相应的数据失效")])]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("基本内存屏障")]),t._v("：")]),t._v(" "),s("p",[t._v("主要有以下 4 类，LoadLoad、LoadStore、StoreStore 和 StoreLoad，这类屏障可统一用 XY 屏障来表示，即禁止屏障左侧的任何 X 操作与屏障右侧的任何 Y 操作之间重排序")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"center"}},[t._v("屏障类型")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("说明")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Load1; LoadLoad; Load2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("确保 Load1 数据加载，先于 Load2 及后续 Load 指令")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Store1; StoreStore; Store2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("确保 Store1 已经刷新到内存，先于 Store2 及后续 Store 指令")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Load1; LoadStore; Store2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("确保 Load1 数据加载，先于 Store2 及后续 Store 指令")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"center"}},[t._v("Store1; StoreLoad; Load2")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("确保 Store1 已经刷新到内存, 先于 Load2 及后续 Load 指令")])])])]),t._v(" "),s("p",[t._v("其中 StoreLoad 是万能屏障，兼具其他 3 个屏障的功能，会在写操作完之后，将写缓冲器中的条目冲刷入主内存；在读操作之前，清空无效化队列，从主内存或其他处理器的高速缓存中读取最新值到自己的内存")]),t._v(" "),s("hr"),t._v(" "),s("p",[s("strong",[t._v("内存屏障分类")]),t._v("：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("按照可见性保障来分：加载屏障（LoadBarrier）和存储屏障（StoreBarrier）")]),t._v(" "),s("ul",[s("li",[t._v("加载屏障：StoreLoad 可以作为加载屏障，使得 CPU 在读共享变量前，先从主内存更新自己的缓存")]),t._v(" "),s("li",[t._v("存储屏障：StoreLoad 也可作为存储屏障，使得 CPU 在写共享变量后，将更新写回主内存")])])]),t._v(" "),s("li",[s("p",[t._v("按照有序性保障来分：获取屏障（AcquireBarrier）和释放屏障（ReleaseBarrier）")]),t._v(" "),s("ul",[s("li",[t._v("获取屏障：LoadLoad 和 LoadStore 组合，在读操作后插入，禁止读操作与后续读写操作重排序")]),t._v(" "),s("li",[t._v("释放屏障：LoadStore 和 StoreStore 组合，在写操作前插入，禁止写操作与前面读写操作重排序")])])])]),t._v(" "),s("h3",{attrs:{id:"内存屏障实现-volatile"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#内存屏障实现-volatile"}},[t._v("#")]),t._v(" 内存屏障实现 volatile")]),t._v(" "),s("p",[s("strong",[t._v("1. volatile 变量写")])]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{staticStyle:{zoom:"70%"},attrs:{src:"/img/Java/volatileW.png"}})]),t._v(" "),s("p",[s("strong",[t._v("2. volatile 变量读")])]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{staticStyle:{zoom:"70%"},attrs:{src:"/img/Java/volatileR.png"}})]),t._v(" "),s("p",[s("strong",[t._v("3. 内存屏障实现：Lock 前缀指令")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("非 volatile 变量")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{staticStyle:{zoom:"100%"},attrs:{src:"/img/Java/NonMemBarrier.jpg"}})])]),t._v(" "),s("li",[s("p",[t._v("volatile 变量")]),t._v(" "),s("div",{attrs:{align:"center"}},[s("img",{staticStyle:{zoom:"100%"},attrs:{src:"/img/Java/MemBarrier.jpg"}})])])]),t._v(" "),s("h2",{attrs:{id:"volatile-缺陷"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#volatile-缺陷"}},[t._v("#")]),t._v(" volatile 缺陷")]),t._v(" "),s("p",[t._v("volatile 关键字只保证可见性和有序性，"),s("strong",[t._v("不能保证原子性")])]),t._v(" "),s("p",[t._v("对于读/写本身，Store 和 Load 指令是原子性的，但是对于复合操作如 i++，是由多个 CPU 指令完成的：")]),t._v(" "),s("ol",[s("li",[t._v("从主内存读取 i 到工作内存（load）")]),t._v(" "),s("li",[t._v("将 i 的值由工作内存压入操作栈进行计算（use）")]),t._v(" "),s("li",[t._v("计算完成，将结果由操作栈写回工作内存（assign）")]),t._v(" "),s("li",[t._v("将 i 的值写回主内存（store）")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * 尽管使用了 volatile 修饰变量，但是结果并不一定正确\n * 假设线程 A，B 都进行了一次 counter++ 操作：\n *  1. 线程 A,B 同时从主内存中读取值 0 写入工作内存开始计算\n *  2. 线程 A 首先完成计算，将 counter 更新为 1，并对线程 B 可见\n *  3. 线程 B 所在 CPU 嗅探到新值，将工作内存中值更新为 1，但此时 0 已经被压入操作栈\n *  4. 线程 B 完成计算，值 1 从栈中弹出，写入工作内存，同时回写主内存\n *  5. 最终两次 counter++ 操作结束后，counter 值为 1\n */")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VolatileTest")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("volatile")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" counter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" pth1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),t._v(" pth2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Thread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                counter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        pth1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        pth2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        pth1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        pth2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br")])]),s("hr"),t._v(" "),s("p",[t._v("参考:")]),t._v(" "),s("p",[t._v("[1] "),s("a",{attrs:{href:"https://since1986.github.io/5ab80f4c.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("volatile 如何保证可见性与有序性"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("[2] "),s("a",{attrs:{href:"https://my.oschina.net/tantexian/blog/808032",target:"_blank",rel:"noopener noreferrer"}},[t._v("精确解释 java 的 volatile 之可见性、原子性、有序性（通过汇编语言）"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("[3] "),s("a",{attrs:{href:"https://www.jianshu.com/p/43af2cc32f90",target:"_blank",rel:"noopener noreferrer"}},[t._v("【Java 并发学习三】 内存屏障与 synchronized、volatile 的原理"),s("OutboundLink")],1)])])}),[],!1,null,null,null);a.default=e.exports}}]);