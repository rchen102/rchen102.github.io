(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{395:function(a,e,v){"use strict";v.r(e);var t=v(25),_=Object(t.a)({},(function(){var a=this,e=a.$createElement,v=a._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[v("h2",{attrs:{id:"hashmap"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hashmap"}},[a._v("#")]),a._v(" HashMap")]),a._v(" "),v("ol",[v("li",[a._v("基于数组实现")])]),a._v(" "),v("ul",[v("li",[a._v("Node<K,V>[] table")]),a._v(" "),v("li",[a._v("Node 是内部类，用于打包 key 和 value，同时也是链表法的节点")])]),a._v(" "),v("p",[a._v("entry？？？？\nmap 遍历方法")]),a._v(" "),v("p",[a._v("key 的比较")]),a._v(" "),v("ul",[v("li",[a._v("特别是自定义类，需要重写 hashCode 和 equals() 方法")]),a._v(" "),v("li",[a._v("先比较 hashCode()，如果相同再比较 equals()\n(元素到底是如何插入的？哈希值到底用的哪个？)")])]),a._v(" "),v("ol",[v("li",[v("p",[a._v("初始大小"),v("br"),a._v("\n默认初始大小 16，如果事先知道数据量有多大，可以提前设置，减少动态扩容次数，提高性能")])]),a._v(" "),v("li",[v("p",[a._v("装载因子和动态扩容")])])]),a._v(" "),v("ul",[v("li",[a._v("最大装载因子 0.75，达到阈值就会启动扩容")]),a._v(" "),v("li",[a._v("每次扩容为原来的 2 倍")])]),a._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[v("p",[a._v("散列冲突的解决"),v("br"),a._v("\n底层采用链表法来解决冲突，在 JDK1.8 中，作了进一步优化，当链表长度太长超过 8 时，链表就会转换为红黑树，可以利用红黑树快速增删改查的特点提高 HashMap 的性能，当红黑树结点数少于 8 时，又会转化为链表（数据量较小时，红黑树要维持平衡，比起链表，性能优势并不明显）")])]),a._v(" "),v("li",[v("p",[a._v("散列函数"),v("br"),a._v("\n散列函数并不复杂，追求简单高效、分布均匀")])]),a._v(" "),v("li",[v("p",[a._v("null 值"),v("br"),a._v("\n可以作为 key，也可以作为 value")])])]),a._v(" "),v("h2",{attrs:{id:"hashtable"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hashtable"}},[a._v("#")]),a._v(" Hashtable")]),a._v(" "),v("p",[a._v("继承结构不同，since JDK1.0 非常老\n线程安全\nkey 和 value 都不能为空\n没有红黑树优化")]),a._v(" "),v("h2",{attrs:{id:"linkedhashmap"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#linkedhashmap"}},[a._v("#")]),a._v(" LinkedHashMap")]),a._v(" "),v("p",[a._v("有序 -> 按照插入顺序")]),a._v(" "),v("h2",{attrs:{id:"treemap"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#treemap"}},[a._v("#")]),a._v(" TreeMap")]),a._v(" "),v("p",[a._v("排序 -> 按照 key 排序")]),a._v(" "),v("ol",[v("li",[a._v("key 要实现 Comparable 接口")])]),a._v(" "),v("p",[a._v("key 不能为 null")])])}),[],!1,null,null,null);e.default=_.exports}}]);