(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{233:function(t,v,_){"use strict";_.r(v);var s=_(0),r=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"数据结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[t._v("#")]),t._v(" 数据结构")]),t._v(" "),_("p",[_("strong",[t._v("1. 数组")])]),t._v(" "),_("ul",[_("li",[t._v("数组批量集中删除有利于减少删除操作导致的数据搬迁，也是 JVM 标记清除垃圾回收算法的核心思想")])]),t._v(" "),_("p",[_("strong",[t._v("2. 链表")])]),t._v(" "),_("ul",[_("li",[t._v("通过链表和散列表，可以实现 LRU 缓存淘汰策略")])]),t._v(" "),_("p",[_("strong",[t._v("3. 栈")])]),t._v(" "),_("ul",[_("li",[t._v("浏览器的前进后退：使用两个栈即可实现")])]),t._v(" "),_("p",[_("strong",[t._v("4. 队列")])]),t._v(" "),_("ul",[_("li",[t._v("线程池处理请求：利用栈进行排队调度")])]),t._v(" "),_("p",[_("strong",[t._v("5. 跳表")])]),t._v(" "),_("ul",[_("li",[t._v("Redis 有序集合的实现使用到了跳表")])]),t._v(" "),_("p",[_("strong",[t._v("6. 散列表")])]),t._v(" "),_("ul",[_("li",[t._v("Word 中的单词拼写检查功能：使用散列表存储整个英文字典，用户输入时，在散列表中查找该单词，如未查找则视为非法单词")])]),t._v(" "),_("h2",{attrs:{id:"算法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法"}},[t._v("#")]),t._v(" 算法")]),t._v(" "),_("p",[_("strong",[t._v("1. 二分查找")])]),t._v(" "),_("ul",[_("li",[t._v("1000 万个数据，每个数据 8 字节，快速判断某个数据是否出现在这 1000 万 数据中，要求内存不超过 100 MB")]),t._v(" "),_("li",[t._v("给定 IP 范围与归属对应表，如何快速定位 IP 地址归属：将对应表按起始 IP 排序，查找最后一个起始 IP 小于等于目标 IP 的区间")])])])}),[],!1,null,null,null);v.default=r.exports}}]);