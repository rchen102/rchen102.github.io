(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{375:function(t,e,v){"use strict";v.r(e);var _=v(25),n=Object(_.a)({},(function(){var t=this,e=t.$createElement,v=t._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[v("strong",[t._v("Set 接口继承了 Collection 接口，具有如下特性")])]),t._v(" "),v("ul",[v("li",[t._v("无序存储，即存储和取出顺序不保证相同")]),t._v(" "),v("li",[t._v("元素唯一性，可以存储 "),v("strong",[t._v("null")]),t._v(" 元素")])]),t._v(" "),v("p",[t._v("Set 接口对 Collection 基本没有扩充，在 JDK 1.9 后追加了一些 "),v("code",[t._v("of()")]),t._v(" 方法够建静态 Set")]),t._v(" "),v("hr"),t._v(" "),v("p",[v("strong",[t._v("Set 有以下常用实现子类")])]),t._v(" "),v("ul",[v("li",[t._v("HashSet：基于"),v("strong",[t._v("哈希表")]),t._v("实现，元素无序唯一，线程不安全")]),t._v(" "),v("li",[t._v("LinkedHashSet：基于"),v("strong",[t._v("链表和哈希表")]),t._v("共同实现，保留元素的插入顺序，线程不安全")]),t._v(" "),v("li",[t._v("TreeSet：基于"),v("strong",[t._v("红黑树")]),t._v("实现，对元素按照指定顺序排序，线程不安全")])]),t._v(" "),v("hr"),t._v(" "),v("p",[v("strong",[t._v("Set 类继承结构图")])]),t._v(" "),v("div",{attrs:{align:"center"}},[v("p",[v("img",{attrs:{src:"/img/Java/Set.png",alt:"Set"}})])])])}),[],!1,null,null,null);e.default=n.exports}}]);