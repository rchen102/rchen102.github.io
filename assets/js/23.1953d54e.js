(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{269:function(t,e,n){"use strict";n.r(e);var l=n(0),a=Object(l.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"不同排序算法比较"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#不同排序算法比较"}},[t._v("#")]),t._v(" 不同排序算法比较")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"center"}},[t._v("排序方法")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("平均时间")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("最好时间")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("最差时间")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("空间复杂度")]),t._v(" "),n("th",{staticStyle:{"text-align":"center"}},[t._v("稳定性")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2) 算法")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("冒泡排序")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("稳定")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("插入排序")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("稳定")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("选择排序")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不稳定")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("O(nlogn) 算法")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("归并排序")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(nlogn)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(nlogn)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(nlogn)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("稳定")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("快速排序")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(nlogn)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(nlogn)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n^2)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不稳定")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("堆排序")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(nlogn)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(nlogn)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(nlogn)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(1)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("不稳定")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n) 算法")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("桶排序")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("稳定")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("计数排序")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(n+k)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("稳定")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"center"}},[t._v("基数排序")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("O(dn)")]),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}}),t._v(" "),n("td",{staticStyle:{"text-align":"center"}},[t._v("稳定")])])])]),t._v(" "),n("h3",{attrs:{id:"几个问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#几个问题"}},[t._v("#")]),t._v(" 几个问题")]),t._v(" "),n("p",[n("strong",[t._v("1. 插入排序和冒泡排序如何选择？")]),n("br"),t._v("\n对于冒泡排序，元素"),n("strong",[t._v("交换")]),t._v("次数固定，等于初始逆序度；而对于插入排序，元素"),n("strong",[t._v("移动")]),t._v("次数固定，等于初始逆序度。但是完成一次交换需要 "),n("strong",[t._v("3")]),t._v(" 个基本操作，而交换只需要 "),n("strong",[t._v("1")]),t._v(" 个，因此插入排序性能更好")]),t._v(" "),n("p",[n("strong",[t._v("2. 归并排序为什么没有快速排序运用广泛？")]),n("br"),t._v("\n尽管快速排序最差时间复杂度为 "),n("code",[t._v("O(n^2)")]),t._v(" ，而归并排序能稳定保持 "),n("code",[t._v("O(nlogn)")]),t._v(" ，但是因为归并排序不是原地排序，需要占用更多的内存。且可以通过一定的技巧构造 "),n("code",[t._v("partition()")]),t._v(" 函数，使得快排的复杂度尽可能接近 "),n("code",[t._v("O(nlogn)")])]),t._v(" "),n("p",[n("strong",[t._v("3. 快速排序为什么比堆排序更常用？")])]),t._v(" "),n("ul",[n("li",[t._v("堆排序对缓存不友好：快速排序是局部顺序访问数组，而堆排序是不连续的")]),t._v(" "),n("li",[t._v("堆排序操作次数更多：尽管时间复杂度相同，快排的交换次数不会超过元素的逆序度，堆排序的建堆操作会带来更多的交换次数。极端情况：一个有序数组经过建堆操作会变成无序数组")])]),t._v(" "),n("p",[n("strong",[t._v("4. 桶排序，计数排序，基数排序分别适用的场景？")])]),t._v(" "),n("ul",[n("li",[t._v("桶排序：10 GB 订单数据，几百 MB 内存，对订单按金额进行排序")]),t._v(" "),n("li",[t._v("计数排序：按照年龄，对 100 万用户进行排序")]),t._v(" "),n("li",[t._v("基数排序：对 10 万个手机号码，按照从小到大进行排序")])]),t._v(" "),n("h3",{attrs:{id:"衡量排序算法效率的指标"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#衡量排序算法效率的指标"}},[t._v("#")]),t._v(" 衡量排序算法效率的指标")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("算法的稳定性：大小相同的元素，排序后，前后顺序是否改变")])]),t._v(" "),n("li",[n("p",[t._v("算法的内存消耗：排序算法的空间复杂度")])]),t._v(" "),n("li",[n("p",[t._v("算法的执行效率：排序算法的时间复杂度")]),t._v(" "),n("ul",[n("li",[t._v("最好、最坏、平均时间复杂度：了解排序算法在各种情况下（有序，无序）的性能")]),t._v(" "),n("li",[t._v("时间复杂度的系数、常数、低阶：对于小规模数据，尤其重要")]),t._v(" "),n("li",[t._v("比较次数或交换、移动次数")])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);